import telebot
from telebot.types import Message, ReplyKeyboardMarkup, KeyboardButton
from collections import deque

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
bot = telebot.TeleBot('7330871122:AAHhvZgtrAVjWWAAvXhZ818E5dEBeNGe0jg')

# –û—á–µ—Ä–µ–¥—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∏—â—É—â–∏—Ö —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
search_queue = deque()
# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤
active_chats = {}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("üîç –ù–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞"), KeyboardButton("‚ùå –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫"))
    return markup

# –ú–µ–Ω—é –¥–ª—è —á–∞—Ç–∞
def chat_menu():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("üîÑ –°–ª–µ–¥—É—é—â–∏–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫"), KeyboardButton("‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥"))
    return markup

# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
@bot.message_handler(commands=['start'])
def start_handler(message: Message):
    bot.send_message(
        message.chat.id,
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π.\n\n"
        "üí¨ –ö–æ–º–∞–Ω–¥—ã:\n"
        "üîç /search - –ù–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞\n"
        "‚ùå /stop - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥\n"
        "üîÑ /next - –ù–∞–π—Ç–∏ –Ω–æ–≤–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞",
        reply_markup=main_menu()
    )

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
@bot.message_handler(func=lambda m: m.text == "üîç –ù–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞")
@bot.message_handler(commands=['search'])
def search_handler(message: Message):
    user_id = message.from_user.id
    if user_id in active_chats:
        bot.send_message(user_id, "‚ùó –í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —á–∞—Ç–µ.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É 'üîÑ –°–ª–µ–¥—É—é—â–∏–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫' –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫—É.", reply_markup=chat_menu())
    elif user_id in search_queue:
        bot.send_message(user_id, "‚ùó –í—ã —É–∂–µ –∏—â–µ—Ç–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ –Ω–∞–π–¥–µ–º –ø–∞—Ä—É.", reply_markup=main_menu())
    else:
        if search_queue:
            partner_id = search_queue.popleft()
            active_chats[user_id] = partner_id
            active_chats[partner_id] = user_id

            bot.send_message(user_id, "‚úÖ –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω! –ù–∞—á–Ω–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ.\n\n–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /stop.", reply_markup=chat_menu())
            bot.send_message(partner_id, "‚úÖ –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω! –ù–∞—á–Ω–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ.\n\n–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /stop.", reply_markup=chat_menu())
        else:
            search_queue.append(user_id)
            bot.send_message(user_id, "üîÑ –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞... –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.", reply_markup=main_menu())

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —á–∞—Ç–∞
@bot.message_handler(func=lambda m: m.text == "‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥")
@bot.message_handler(commands=['stop'])
def stop_handler(message: Message):
    user_id = message.from_user.id
    if user_id in active_chats:
        partner_id = active_chats.pop(user_id)
        active_chats.pop(partner_id, None)

        bot.send_message(user_id, "‚ùå –í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ —á–∞—Ç.\n–î–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /search.", reply_markup=main_menu())
        bot.send_message(partner_id, "‚ùå –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç.", reply_markup=main_menu())
    elif user_id in search_queue:
        search_queue.remove(user_id)
        bot.send_message(user_id, "‚ùå –í—ã –ø—Ä–µ–∫—Ä–∞—Ç–∏–ª–∏ –ø–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.", reply_markup=main_menu())
    else:
        bot.send_message(user_id, "‚ùó –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —á–∞—Ç–µ –∏–ª–∏ –ø–æ–∏—Å–∫–µ.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /search –¥–ª—è –Ω–∞—á–∞–ª–∞.", reply_markup=main_menu())

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
@bot.message_handler(func=lambda m: m.text == "üîÑ –°–ª–µ–¥—É—é—â–∏–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫")
@bot.message_handler(commands=['next'])
def next_handler(message: Message):
    user_id = message.from_user.id
    if user_id in active_chats:
        partner_id = active_chats.pop(user_id)
        active_chats.pop(partner_id, None)

        bot.send_message(user_id, "üîÑ –í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ç–µ–∫—É—â–∏–π –¥–∏–∞–ª–æ–≥. –ü–æ–∏—Å–∫ –Ω–æ–≤–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞...", reply_markup=main_menu())
        bot.send_message(partner_id, "‚ùå –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç.", reply_markup=main_menu())
        search_handler(message)
    else:
        bot.send_message(user_id, "‚ùó –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —á–∞—Ç–µ.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /search –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–∏—Å–∫–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.", reply_markup=main_menu())

# –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def text_message_handler(message: Message):
    user_id = message.from_user.id
    if user_id in active_chats:
        partner_id = active_chats[user_id]
        bot.send_message(partner_id, message.text)
    else:
        bot.send_message(user_id, "‚ùó –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —á–∞—Ç–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π.", reply_markup=main_menu())

# –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Ñ–æ—Ç–æ
@bot.message_handler(content_types=['photo'])
def photo_message_handler(message: Message):
    user_id = message.from_user.id
    if user_id in active_chats:
        partner_id = active_chats[user_id]
        bot.send_photo(partner_id, message.photo[-1].file_id, caption=message.caption)
    else:
        bot.send_message(user_id, "‚ùó –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —á–∞—Ç–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π.", reply_markup=main_menu())

# –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –≤–∏–¥–µ–æ
@bot.message_handler(content_types=['video'])
def video_message_handler(message: Message):
    user_id = message.from_user.id
    if user_id in active_chats:
        partner_id = active_chats[user_id]
        bot.send_video(partner_id, message.video.file_id, caption=message.caption)
    else:
        bot.send_message(user_id, "‚ùó –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —á–∞—Ç–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π.", reply_markup=main_menu())

# –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['voice'])
def voice_message_handler(message: Message):
    user_id = message.from_user.id
    if user_id in active_chats:
        partner_id = active_chats[user_id]
        bot.send_voice(partner_id, message.voice.file_id, caption=message.caption)
    else:
        bot.send_message(user_id, "‚ùó –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —á–∞—Ç–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π.", reply_markup=main_menu())

# –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –≤–∏–¥–µ–æ-—Å–æ–æ–±—â–µ–Ω–∏–π (–∫—Ä—É–∂–∫–æ–≤)
@bot.message_handler(content_types=['video_note'])
def video_note_message_handler(message: Message):
    user_id = message.from_user.id
    if user_id in active_chats:
        partner_id = active_chats[user_id]
        bot.send_video_note(partner_id, message.video_note.file_id)
    else:
        bot.send_message(user_id, "‚ùó –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —á–∞—Ç–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π.", reply_markup=main_menu())

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    try:
        bot.polling()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
